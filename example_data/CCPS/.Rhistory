lma_100=xx$V14)
xx<-unique(xx) # 15578
geno_id<-read.table('final.fam',h=F)
geno_id<-geno_id[match(idc$ind,geno_id$V2),]
geno_id<-geno_id[complete.cases(geno_id),]
geno_id_xx<-geno_id[grepl("DDSHXX",geno_id$V2),]
geno_id_tb<-geno_id[!grepl("DDSHXX",geno_id$V2),]
head(geno_id_xx)
head(idc)
#祥欣有10个个体不在系谱里，要拿掉
geno_id_xx2<-idc[match(geno_id_xx$V2,idc$ind),]
head(geno_id_xx2)
View(geno_id_xx2)
nrow(geno_id_xx2)
head(xx_ped)
geno_id_xx2[!(geno_id_xx2$ord2%in%xx_ped$V1),]
geno_id_xx[!(geno_id_xx2$ord2%in%xx_ped$V1),]
View(geno_id_xx[(geno_id_xx2$ord2%in%xx_ped$V1),])
nrow(geno_id_xx[(geno_id_xx2$ord2%in%xx_ped$V1),])
write.table(geno_id_xx[(geno_id_xx2$ord2%in%xx_ped$V1),],file='xx_duroc_ped_ind.txt',row.names = F,col.names = F,quote = F) # 这里要去跑plink与GCTA
geno_id<-read.table('clean.fam',h=F)
head(geno_id)
nrow(geno_id)
950+459
geno_id2<-idc[match(geno_id$V2,idc$ind),]
head(geno_id2)
nrow(geno_id2)
head(geno_id_xx[(geno_id_xx2$ord2%in%xx_ped$V1),])
head(geno_id_tb)
nrow(geno_id_tb)
nrow(geno_id_xx[(geno_id_xx2$ord2%in%xx_ped$V1),])
geno_id2<-rbind(geno_id_xx[(geno_id_xx2$ord2%in%xx_ped$V1),],geno_id_tb)
nrow(geno_id2)
write.table(geno_id2,file='duroc_ped_ind.txt',row.names = F,col.names = F,quote = F) # 这里要去跑plink与GCTA
geno_id<-read.table('clean.fam',h=F)
nrow(geno_id)
geno_id_tb<-read.table('clean_tb.fam',h=F)
geno_id_xx<-read.table('clean_xx.fam',h=F)
geno_id_dmu<-idc[match(geno_id$V2,idc$ind),]
geno_id_tb_dmu<-idc[match(geno_id_tb$V2,idc$ind),]
geno_id_xx_dmu<-idc[match(geno_id_xx$V2,idc$ind),]
head(geno_id_dmu)
write.table(geno_id_dmu[-1],file="Geno_id",row.names=F,col.names = F,quote = F)
write.table(geno_id_tb_dmu[-1],file="Geno_id_tb",row.names=F,col.names = F,quote = F)
write.table(geno_id_xx_dmu[-1],file="Geno_id_xx",row.names=F,col.names = F,quote = F)
#整理一下验证群体
tb_idc<-idc[!grepl("DDSHXX",idc$ind),]
xx_idc<-idc[grepl("DDSHXX",idc$ind),]
tb_geno<-geno_id_dmu[match(tb_idc$ind,geno_id_dmu$ind),]
tb_geno<-tb_geno[complete.cases(tb_geno),]
tb_birth<-duroc_pro[match(tb_geno$ind,duroc_pro$个体号), c('个体号','出生日期')]
tb_birth<-tb_birth[match(tb_geno$ind,tb_birth$个体号),]
tb_geno$birth<-tb_birth$出生日期
tb_geno<-tb_geno[order(tb_geno$birth),]
tb_geno$grp<-0
tb_geno$grp[(nrow(tb_geno)-floor(nrow(tb_geno)*0.2)):nrow(tb_geno)]<-1
xx_geno<-geno_id_dmu[match(xx_idc$ind,geno_id_dmu$ind),]
xx_geno<-xx_geno[complete.cases(xx_geno),]
xx_geno
phe<-apply(phe,2,as.numeric)
phe<-as.data.frame(phe)
phe_msk<-phe
phe_msk[phe_msk$id%in%tb_geno[tb_geno$grp==1,'ord2'],8:11]<-NA
phe_msk2<-phe #把基因组个体全掩盖
phe_msk2[phe_msk2$id%in%tb_geno[,'ord2'],8:11]<-NA
phe[is.na(phe)]<- -999
phe_msk[is.na(phe_msk)]<- -999
phe_msk2[is.na(phe_msk2)]<- -999
xx[is.na(xx)]<- -999
write.table(phe,file="DUROC_DAT_TB",row.names = F,col.names = F,quote = F)
write.table(xx,file="DUROC_DAT_XX",row.names = F,col.names = F,quote = F)
dmu_dat_all<-rbind.data.frame(phe,xx)
write.table(dmu_dat_all,file="DUROC_DAT",row.names = F,col.names = F,quote = F)
dmu_dat_msk<-rbind.data.frame(phe_msk,xx)
write.table(dmu_dat_msk,file="DUROC_DAT_MSK",row.names = F,col.names = F,quote = F)
dmu_dat_msk2<-rbind.data.frame(phe_msk2,xx)
write.table(dmu_dat_msk2,file="DUROC_DAT_MSK2",row.names = F,col.names = F,quote = F)
write.table(phe_msk,file="DUROC_DAT_MSK_TB",row.names = F,col.names = F,quote = F)
ped_dmu[is.na(ped_dmu)]<--999
xx_ped$V4<-xx_ped$V1
xx_ped[xx_ped==0]<--999
xx_ped[xx_ped==-999999997]<--999
write.table(xx_ped,file="PED_XX",row.names = F,col.names = F,quote = F)
write.table(ped_dmu,file="PED_TB",row.names = F,col.names = F,quote = F)
colnames(ped_dmu)<-c('V1','V2','V3','V4')
ped_all<-rbind(ped_dmu,xx_ped)
write.table(ped_all,file="PED",row.names = F,col.names = F,quote = F)
#### grm
get_grm<-function(grm_file="clean.grm.gz",fam_file="clean.fam"){
grm<-fread(grm_file)
fam<-read.table(fam_file,h=F)
fam_id<-geno_id_dmu[match(fam$V2,geno_id_dmu$ind),'ord2']
grm2<-data.frame(fam_id[grm$V1],fam_id[grm$V2],grm$V4)
return(grm2)
}
grm_all<-get_grm(grm_file="clean.grm.gz",fam_file="clean.fam")
write.table(grm_all,file="gmat.txt",row.names = F,col.names = F,quote = F) #所有个体的GRM
grm_tb<-get_grm(grm_file="clean_tb.grm.gz",fam_file="clean_tb.fam")
write.table(grm_tb,file="gmat_tb.txt",row.names = F,col.names = F,quote = F) #天邦GRM
grm_xx<-get_grm(grm_file="clean.grm.gz",fam_file="clean.fam")
write.table(grm_xx,file="gmat_xx.txt",row.names = F,col.names = F,quote = F) #祥欣GRM
### 系谱重新排序
sort_ped<-function(ped_file="PED"){
ped<-read.table(ped_file,h=F)
ped[ped==-999]<-NA
ped<-dd.Inds_new(ped)
ord <- orderPed(ped)
ped<-ped[order(ord),]
ped$V4<-1:nrow(ped)
ped[is.na(ped)]<--999
return(ped)
}
ped_sort<-sort_ped("PED")
write.table(ped_sort,file="PED_SORT",row.names = F,col.names = F,quote = F)
ped_xx<-sort_ped("PED_XX")
write.table(ped_xx,file="PED_SORT_XX",row.names = F,col.names = F,quote = F)
ped_tb<-sort_ped("PED_TB")
write.table(ped_tb,file="PED_SORT_TB",row.names = F,col.names = F,quote = F)
geno_id_tb_dmu
geno_id_xx_dmu
which(geno_id_xx_dmu$ord2==240254)
xx<-read.table("/Users/zhezhang/Desktop/天邦数据/华中农大芯片/祥欣数据_new/prod_duroc.txt",h=F)
head(xx)
xx$V2==240254
sum(xx$V2==240254)
xx<-read.table("/Users/zhezhang/Desktop/天邦数据/华中农大芯片/祥欣数据_new/prod_duroc.txt",h=F)
#xx2<-xx[xx$V2%in%idc$ord2,]
xx<-data.frame(mu=1,id=xx$V2,parity=xx$V3,
hys=xx$V4,sex=xx$V5,dam=xx$V6,
farm=1,
w_bore=xx$V13,
cor_115=xx$V16,
bf_115=xx$V19,
lma_100=xx$V20)
head(xx)
write.table(xx,file="DUROC_DAT_XX",row.names = F,col.names = F,quote = F)
dmu_dat_all<-rbind.data.frame(phe,xx)
write.table(dmu_dat_all,file="DUROC_DAT",row.names = F,col.names = F,quote = F)
head(phe)
dmu_dat_msk<-rbind.data.frame(phe_msk,xx)
write.table(dmu_dat_msk,file="DUROC_DAT_MSK",row.names = F,col.names = F,quote = F)
dmu_dat_msk2<-rbind.data.frame(phe_msk2,xx)
write.table(dmu_dat_msk2,file="DUROC_DAT_MSK2",row.names = F,col.names = F,quote = F)
write.table(phe_msk,file="DUROC_DAT_MSK_TB",row.names = F,col.names = F,quote = F)
which(xx_ped$V1==240254)
grm_all<-get_grm(grm_file="clean.grm.gz",fam_file="clean.fam")
nrow(grm_all)
head(grm_all)
which(grm_all[,1]==12038)
grm_all<-get_grm(grm_file="clean.grm.gz",fam_file="clean.fam")
write.table(grm_all,file="gmat.txt",row.names = F,col.names = F,quote = F) #所有个体的GRM
grm_tb<-get_grm(grm_file="clean_tb.grm.gz",fam_file="clean_tb.fam")
write.table(grm_tb,file="gmat_tb.txt",row.names = F,col.names = F,quote = F) #天邦GRM
grm_xx<-get_grm(grm_file="clean_xx.grm.gz",fam_file="clean_xx.fam")
write.table(grm_xx,file="gmat_xx.txt",row.names = F,col.names = F,quote = F) #祥欣GRM
318+140
head(grm_all)
create_grm<-function(grm,size=950+459){
grm_mat<-matrix(0,size,size)
grm_mat[upper.tri(grm_mat,diag = T)]<-grm$V4
grm_mat<-t(grm_mat)
grm_mat[upper.tri(grm_mat,diag = T)]<-grm$V4
return(grm_mat)
}
####对于方法6，要先针对祥欣跑ssBLUP，然后再针对所有个体的基因型跑GBLUP
library(BGLR)
create_grm<-function(grm,size=950+459){
grm_mat<-matrix(0,size,size)
grm_mat[upper.tri(grm_mat,diag = T)]<-grm$V4
grm_mat<-t(grm_mat)
grm_mat[upper.tri(grm_mat,diag = T)]<-grm$V4
return(grm_mat)
}
gmat<-create_grm(grm_all)
head(grm_all)
create_grm<-function(grm,size=950+459){
grm_mat<-matrix(0,size,size)
grm_mat[upper.tri(grm_mat,diag = T)]<-grm[,3]
grm_mat<-t(grm_mat)
grm_mat[upper.tri(grm_mat,diag = T)]<-grm[,3]
return(grm_mat)
}
gmat<-create_grm(grm_all)
head(gmat)[,1:10]
head(grm_all)
#gmat<-gmat+0.01*diag(nrow(gmat))
ginv<-solve(gmat)
ginv_dat<-data.frame(c(0,fam_id[grm$V1]),c(0,fam_id[grm$V2]),
c(determinant(ginv)$modulus,ginv[upper.tri(ginv,diag = T)]))
head(gmat[upper.tri(ginv,diag = T)])
ginv_dat<-data.frame(c(0,grm_all[,1]),c(0,grm_all[,2]),
c(determinant(ginv)$modulus,ginv[upper.tri(ginv,diag = T)]))
write.table(ginv_dat,file="GINV",row.names = F,col.names = F,quote = F)
xx_geno
nrow(xx_geno)
trait<-'BW'
ebv<-read.table(paste0(trait,"/ssBLUP_XX_SOL"),h=F)
ebv<-ebv[ebv$V1==4,]
mu<-ebv[ebv$V1==2 & ebv$V4==1,8]
mu
ebv<-read.table(paste0(trait,"/ssBLUP_XX_SOL"),h=F)
mu<-ebv[ebv$V1==2 & ebv$V4==1,8]
mu
ebv<-ebv[ebv$V1==4,]
ebv<-ebv[match(xx_geno[,'ord2'],ebv$V5),]
ebv$V8
ebv$V8+mu
gblup_dmu<-data.frame(mu=1,id=ebv$V5,gebv=ebv$V8+mu)
gblup_dmu<-data.frame(mu=1,id=ebv$V5,gebv=ebv$V8+mu)
gblup_dmu
extract_xxebv<-function(trait){
ebv<-read.table(paste0(trait,"/ssBLUP_XX_SOL"),h=F)
mu<-ebv[ebv$V1==2 & ebv$V4==1,8]
ebv<-ebv[ebv$V1==4,]
ebv<-ebv[match(xx_geno[,'ord2'],ebv$V5),]
gblup_dmu<-data.frame(mu=1,id=ebv$V5,gebv=ebv$V8+mu)
write.table(gblup_dmu,file=paste0(trait,"/GBLUP_DAT"),row.names = F,col.names = F,quote = F)
}
extract_xxebv('BW')
extract_xxebv('CORR')
extract_xxebv('BF')
extract_xxebv('LMA')
gmat<-create_grm(grm_all)
gmat<-gmat+0.01*diag(nrow(gmat))
ginv<-solve(gmat)
ginv_dat<-data.frame(c(0,grm_all[,1]),c(0,grm_all[,2]),
c(determinant(ginv)$modulus,ginv[upper.tri(ginv,diag = T)]))
write.table(ginv_dat,file="GINV",row.names = F,col.names = F,quote = F)
SNP1025325 SNP1153903
0.05/35389
1/35389
gmat<-create_grm(grm_all)
###然后跑BGLR
nIter=12000
burnIn=2000
evd_gblup<-eigen(gmat)
getwd()
trait<-"BW"
ETA_gblup<-list(list(V=evd_gblup$vectors,d=evd_gblup$values, model='RKHS'))
y<-read.table(paste0(trait,"/GBLUP_DAT"),h=F)
head(y)
head(geno_id_dmu)
nrow(geno_id_dmu)
y<-cbind(geno_id_dmu,y[match(geno_id_dmu$ord2,y$V2),])
head(y)
y$V3
###然后跑BGLR
nIter=1200
burnIn=200
fm<-BGLR(y=y$V3,ETA=ETA_gblup, nIter=nIter, burnIn=burnIn,saveAt=prefix,verbose=F)
prefix<-paste0(trait,'/GBLUP')
fm<-BGLR(y=y$V3,ETA=ETA_gblup, nIter=nIter, burnIn=burnIn,saveAt=prefix,verbose=F)
whichNA<-which(is.na(y$V3))
y_tb<-y[whichNA,]
y_tb
y_tb$GEBV<-fm$ETA[[1]]$u[whichNA]
y_tb
y_tb<-y_tb[,c(1,2,6)]
y_tb
varE<-scan(paste0(trait,'/varE.dat'))
varE<-scan(paste0(trait,'/GBLUP_DAT_varE.dat'))
varE<-scan(paste0(trait,'/GBLUP_DATvarE.dat'))
varE<-scan(paste0(trait,'/GBLUPvarE.dat'))
plot(varE,type='o',col=2,cex=.5,ylab=expression(var[e]));
abline(h=fm$varE,col=4,lwd=2);
abline(v=fm$burnIn/fm$thin,col=4)
varg<-scan(paste0(saveAt,'GBLUPETA_1_varU.dat'))
varg<-scan(paste0(trait,'GBLUPETA_1_varU.dat'))
varg<-scan(paste0(trait,'/GBLUPETA_1_varU.dat'))
plot(varg,type='o',col=2,cex=.5,ylab=expression(var[g]));
abline(h=fm$ETA[[2]]$varB,col=4,lwd=2);
abline(v=fm$burnIn/fm$thin,col=4)
names(fm)
names(fm$ETA)
length(fm$ETA)
names(fm$ETA[[1]])
fm$ETA[[1]]$varU
abline(h=fm$ETA[[1]]$varU,col=4,lwd=2);
gblup_bglr<-function(trait){
y<-read.table(paste0(trait,"/GBLUP_DAT"),h=F)
y<-cbind(geno_id_dmu,y[match(geno_id_dmu$ord2,y$V2),])
prefix<-paste0(trait,'/GBLUP')
fm<-BGLR(y=y$V3,ETA=ETA_gblup, nIter=nIter, burnIn=burnIn,saveAt=prefix,verbose=F)
whichNA<-which(is.na(y$V3))
y_tb<-y[whichNA,]
y_tb$GEBV<-fm$ETA[[1]]$u[whichNA]
y_tb<-y_tb[,c(1,2,6)]
return(y_tb)
}
GEBV_BW<-gblup_bglr('BW')
GEBV_BF<-gblup_bglr('BF')
GEBV_CORR<-gblup_bglr('CORR')
GEBV_LMA<-gblup_bglr('LMA')
diagnoise<-function(trait){
varE<-scan(paste0(trait,'/GBLUPvarE.dat'))
plot(varE,type='o',col=2,cex=.5,ylab=expression(var[e]));
abline(h=fm$varE,col=4,lwd=2);
abline(v=fm$burnIn/fm$thin,col=4)
varg<-scan(paste0(trait,'/GBLUPETA_1_varU.dat'))
plot(varg,type='o',col=2,cex=.5,ylab=expression(var[g]));
abline(h=fm$ETA[[1]]$varU,col=4,lwd=2);
abline(v=fm$burnIn/fm$thin,col=4)
}
diagnoise('BW')
diagnoise('BF')
###然后跑BGLR
nIter=12000
burnIn=2000
GEBV_BW<-gblup_bglr('BW')
GEBV_BF<-gblup_bglr('BF')
GEBV_CORR<-gblup_bglr('CORR')
GEBV_LMA<-gblup_bglr('LMA')
diagnoise('BW')
diagnoise('BF')
trait<-'BF'
varE<-scan(paste0(trait,'/GBLUPvarE.dat'))
plot(varE,type='o',col=2,cex=.5,ylab=expression(var[e]));
abline(h=fm$varE,col=4,lwd=2);
diagnoise<-function(trait){
varE<-scan(paste0(trait,'/GBLUPvarE.dat'))
plot(varE,type='o',col=2,cex=.5,ylab=expression(var[e]));
varg<-scan(paste0(trait,'/GBLUPETA_1_varU.dat'))
plot(varg,type='o',col=2,cex=.5,ylab=expression(var[g]));
}
diagnoise('CORR')
diagnoise('LMA')
##########跑DMU然后进行如下对比分析
dat<-read.table("DUROC_DAT",h=F)
head(dat)
nrow(dat)
table(dat$V7)
order<-1:nrow(dat)
##########跑DMU然后进行如下对比分析
dat<-read.table("DUROC_DAT",h=F)
order<-1:nrow(dat)
head(tb_geno)
extract_ebv<-function(trait,name){
ebv<-read.table(paste0(trait,"/",name,"_SOL"),h=F)
ebv<-ebv[ebv$V1==4,]
ebv<-ebv[match(tb_geno[tb_geno$grp==1,'ord2'],ebv$V5),]
return(ebv)
}
extract_residual<-function(trait,name){
order2<-order[match(tb_geno[tb_geno$grp==1,'ord2'],dat$V2)]
residual<-read.table(paste0(trait,"/",name,"_RESIDUAL"),h=F)
res<-residual[match(order2,residual$V1),]
res<-data.frame(V1=dat$V2[order2],V8=res$V4)
return(res)
}
triat<-'BW'
method='BEV1'
method='EBV1'
if(method=='EBV1'){
ebv<-extract_ebv(trait,"BLUP")
}
ebv
#ebv<-extract_ebv(trait,"ssBLUP")
#ebv<-extract_residual(trait,"ssBLUP")
ebv_pblup<-extract_ebv(trait,"BLUP_msk")
ebv_pblup
gebv_ssblup<-extract_ebv(trait,"ssBLUP_msk")
gebv_ssblup_withXX<-extract_ebv(trait,"ssBLUP_withXX_msk")
gebv_ssblup_onlyXX<-extract_ebv(trait,"ssBLUP_onlyXX_msk")
gebv_ssblup_withoutTB<-extract_ebv(trait,"ssBLUP_withoutTB_msk")
gebv_gblup_withoutTB<-get(paste0('GEBV_',trait))
gebv_gblup_withoutTB
gebv_gblup_withoutTB<-gebv_gblup_withoutTB[match(ebv$V5,gebv_gblup_withoutTB$ord2),]
gebv_gblup_withoutTB
res<-data.frame(方法=c('EBV_TB','GEBV_TB','GEBV_TB_withXX','GEBV_TB_onlyXX','GEBV_TB_withoutTB','GEBV_TB_withXX_GBLUP'),
准确性=c(cor(ebv_pblup$V8,ebv$V8),cor(gebv_ssblup$V8,ebv$V8),
cor(gebv_ssblup_withXX$V8,ebv$V8),cor(gebv_ssblup_onlyXX$V8,ebv$V8),
cor(gebv_ssblup_withoutTB$V8,ebv$V8),cor(gebv_gblup_withoutTB$GEBV,ebv$V8)),
标准=method,
性状=trait)
res
trait
calc_prec<-function(trait,method){
if(method=='EBV1'){
ebv<-extract_ebv(trait,"BLUP")
}
if(method=='Y1'){
resi<-extract_residual(trait,"BLUP")
ebv<-extract_ebv(trait,"BLUP")
ebv$V8<-ebv$V8+resi$V8
}
if(method=='EBV2'){
ebv<-extract_ebv(trait,"ssBLUP")
}
if(method=='Y2'){
resi<-extract_residual(trait,"ssBLUP")
ebv<-extract_ebv(trait,"ssBLUP")
ebv$V8<-ebv$V8+resi$V8
}
#ebv<-extract_ebv(trait,"ssBLUP")
#ebv<-extract_residual(trait,"ssBLUP")
ebv_pblup<-extract_ebv(trait,"BLUP_msk")
gebv_ssblup<-extract_ebv(trait,"ssBLUP_msk")
gebv_ssblup_withXX<-extract_ebv(trait,"ssBLUP_withXX_msk")
gebv_ssblup_onlyXX<-extract_ebv(trait,"ssBLUP_onlyXX_msk")
gebv_ssblup_withoutTB<-extract_ebv(trait,"ssBLUP_withoutTB_msk")
gebv_gblup_withoutTB<-get(paste0('GEBV_',trait))
gebv_gblup_withoutTB<-gebv_gblup_withoutTB[match(ebv$V5,gebv_gblup_withoutTB$ord2),]
# res<-data.frame(BLUP_cor=cor(ebv_pblup$V8,ebv$V8),BLUP_rank=cor(ebv_pblup$V8,ebv$V8,method='spearman'),
#                 ssBLUP_cor=cor(gebv_ssblup$V8,ebv$V8),ssBLUP_rank=cor(gebv_ssblup$V8,ebv$V8,method='spearman'),
#                 ssBLUP_withXX_cor=cor(gebv_ssblup_withXX$V8,ebv$V8),
#                 ssBLUP_withXX_rank=cor(gebv_ssblup_withXX$V8,ebv$V8,method='spearman'),
#                 ssBLUP_onlyXX_cor=cor(gebv_ssblup_onlyXX$V8,ebv$V8),
#                 ssBLUP_onlyXX_rank=cor(gebv_ssblup_onlyXX$V8,ebv$V8,method='spearman'))
res<-data.frame(方法=c('EBV_TB','GEBV_TB','GEBV_TB_withXX','GEBV_TB_onlyXX','GEBV_TB_withoutTB','GEBV_TB_withXX_GBLUP'),
准确性=c(cor(ebv_pblup$V8,ebv$V8),cor(gebv_ssblup$V8,ebv$V8),
cor(gebv_ssblup_withXX$V8,ebv$V8),cor(gebv_ssblup_onlyXX$V8,ebv$V8),
cor(gebv_ssblup_withoutTB$V8,ebv$V8),cor(gebv_gblup_withoutTB$GEBV,ebv$V8)),
标准=method,
性状=trait)
return(res)
}
trait<-c('BW','CORR','BF','LMA')
std<-c('EBV1','EBV2','Y1','Y2')
plot_dat<-list()
cnt<-0
for(i in 1:length(trait)){
for(j in 1:length(std)){
cnt<-cnt+1
plot_dat[[cnt]]<-calc_prec(trait[i],std[j])
}
}
plot_dat<-rbindlist(plot_dat)
#plot_dat<-droplevels(plot_dat[plot_dat$方法!='GEBV_TB_withoutTB' & plot_dat$方法!='GEBV_TB_withXX_GBLUP',])
plot_dat$性状<-mapvalues(plot_dat$性状, from = c("CORR"),
to = c("DAY"))
library(plyr)
#plot_dat<-droplevels(plot_dat[plot_dat$方法!='GEBV_TB_withoutTB' & plot_dat$方法!='GEBV_TB_withXX_GBLUP',])
plot_dat$性状<-mapvalues(plot_dat$性状, from = c("CORR"),
to = c("DAY"))
unique(plot_dat$方法)
plot_dat$方法<-mapvalues(plot_dat$方法, from = c("GEBV_TB_withXX","GEBV_TB_onlyXX","GEBV_TB_withXX_GBLUP"),
to = c("GEBV_TB_withZJU","GEBV_TB_onlyZJU","GEBV_TB_withZJU_GBLUP"))
plot_dat$方法<-factor(plot_dat$方法,levels=c('EBV_TB','GEBV_TB','GEBV_TB_withZJU',
'GEBV_TB_onlyZJU','GEBV_TB_withoutTB','GEBV_TB_withZJU_GBLUP'))
ggplot(plot_dat, aes(x=性状,y=准确性,fill=方法)) +
geom_bar(stat = "identity",position='dodge') +
facet_wrap( ~ 标准,nrow=2,scales='free_y')+
theme_pubclean(base_family="STSong", base_size = 15)+
theme(legend.title=element_blank())
library(xbreed)
genome<-data.frame(matrix(NA, nrow=3, ncol=6))
names(genome)<-c("chr","len","nmrk","mpos","nqtl","qpos")
genome$chr<-c(1:3)
genome$len<-c(80,60,50)
genome$nmrk<-c(500,1000,250)
genome$mpos<-c('rnd','rnd','rnd')
genome$nqtl<-c(40,50,45)
genome$qpos<-c('rnd','rnd','rnd')
genome
hp<-make_hp(hpsize=200,
ng=500,h2=0.3,d2=0.1,phen_var=1,
genome=genome,mutr=5*10**-4,sel_seq_qtl=0.1,sel_seq_mrk=0.05,laf=0.5)
?-make_hp
?-make_hp
?make_hp
Selection<-data.frame(matrix(NA, nrow=2, ncol=2))
# make breed A and B
Breed_A_Male_fndrs<-data.frame(number=50,select='rnd')
Breed_A_Female_fndrs<-data.frame(number=50,select='rnd')
Selection<-data.frame(matrix(NA, nrow=2, ncol=2))
Selection
Breed_A_Male_fndrs
Breed_A_Female_fndrs
Breed_A_data<-data.frame(matrix(NA, nrow=1, ncol=6))
Breed_A_data
names(Breed_A_data)<-c('data','qtl','marker','seq','freq_qtl','freq_mrk')
Breed_A_data
Breed_A_data[,1]<-10
Breed_A_data[,2]<-10
Breed_A_data[,3]<-10
Breed_A_data[,4]<-10
Breed_A_data[,5]<-10
Breed_A_data[,6]<-10
Breed_A_data
Breed_A_Male_fndrs
Breed_A_Female_fndrs
Selection
?sample_hp
getwd()
setwd('/Users/zhezhang/Desktop/icloud/0-tongbu/6-teacher/1-book/CCPS')
historical
Breed_A_Male_fndrs
Breed_A_Female_fndrs
Selection
Selection<-data.frame(matrix(NA, nrow=2, ncol=2))
names(Selection)<-c('Number','type')
Selection$Number[1:2]<-c(50,100)
Selection$type[1:2]<-c('rnd','rnd')
Selection
Breed_A<-sample_hp(hp_out=hp,Male_founders=Breed_A_Male_fndrs,
Female_founders=Breed_A_Female_fndrs,
ng=10,Selection=Selection,
litter_size=5,saveAt="BreedA",sh_output=Breed_A_data,Display=TRUE)
# make breed B
Breed_B_Male_fndrs<-data.frame(number=50,select='rnd')
Breed_B_Female_fndrs<-data.frame(number=50,select='rnd')
Selection
Selection<-data.frame(matrix(NA, nrow=2, ncol=3))
names(Selection)<-c('Number','type')
Selection$Number[1:2]<-c(50,100)
Selection$type[1:2]<-c('rnd','rnd')
Selection
Selection<-data.frame(matrix(NA, nrow=2, ncol=2))
names(Selection)<-c('Number','type')
Selection$Number[1:2]<-c(50,100)
Selection$type[1:2]<-c('rnd','rnd')
Selection
